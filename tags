!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PARSER_VERSION!Python	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/wh/PhD/FA24/CHEM6280/MP2/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
1. Molecular Data pulled from pubchem in .sdf format. Converted to .gzmat with Avogadro.	README.md	/^# 1. Molecular Data pulled from pubchem in .sdf format. Converted to .gzmat with Avogadro.$/;"	c
2. Naive implementation of MP2 derived from https://github.com/psi4/psi4numpy/blob/master/Tutorials/05_Moller-Plesset/5a_conventional-mp2.ipynb, with alterations to allow for reading input files. (To Do)	README.md	/^# 2. Naive implementation of MP2 derived from https:\/\/github.com\/psi4\/psi4numpy\/blob\/maste/;"	c
3. Libraries for ML utilized to parallelize tensor math. (To Do)	README.md	/^# 3. Libraries for ML utilized to parallelize tensor math. (To Do)$/;"	c
3. Make utility for tracking compute time? Or is this already save somewhere? (To Do)	README.md	/^# 3. Make utility for tracking compute time? Or is this already save somewhere? (To Do)$/;"	c
4. Reimplementation of code in Bend language (To do)	README.md	/^# 4. Reimplementation of code in Bend language (To do)$/;"	c
5. Format memory to read only pertinent integrals as needed (To Do)	README.md	/^# 5. Format memory to read only pertinent integrals as needed (To Do)$/;"	c
C	src/mp2.py	/^C = np.asarray(scf_wfn.Ca())$/;"	v
Co	src/mp2.py	/^Co = scf_wfn.Ca_subset('AO','OCC')$/;"	v
Cocc	src/mp2.py	/^Cocc = C[:, :ndocc]$/;"	v
Cv	src/mp2.py	/^Cv = scf_wfn.Ca_subset('AO', 'VIR')$/;"	v
Cvirt	src/mp2.py	/^Cvirt = C[:, ndocc:]$/;"	v
I	src/mp2.py	/^I = np.asarray(mints.ao_eri())$/;"	v
I_size	src/mp2.py	/^I_size = (nmo**4) * 8.e-9$/;"	v
Imo	src/mp2.py	/^Imo = np.einsum('pi,qa,pqrs,rj,sb->iajb', Cocc, Cvirt, I, Cocc, Cvirt, optimize=True)$/;"	v
MO	src/mp2.py	/^MO = np.asarray(mints.mo_eri(Co, Cv, Co, Cv))$/;"	v
MP2	README.md	/^# MP2$/;"	c
MP2_E	src/mp2.py	/^MP2_E = scf_e + mp2_os_corr+ mp2_ss_corr$/;"	v
Naive Implementation of Moller-Plesset perturbation theory of the second order.	README.md	/^# Naive Implementation of Moller-Plesset perturbation theory of the second order.$/;"	c
current_dir	src/current_directory.py	/^current_dir = str(Path.cwd())$/;"	v
current_dir	src/mp2.py	/^current_dir = str(Path.cwd())$/;"	v
e_ab	src/mp2.py	/^e_ab = eps[ndocc:]$/;"	v
e_denom	src/mp2.py	/^e_denom = 1 \/ (e_ij.reshape(-1, 1, 1, 1) - e_ab.reshape(-1, 1, 1) + e_ij.reshape(-1,1) - e_ab)$/;"	v
e_ij	src/mp2.py	/^e_ij = eps[:ndocc]$/;"	v
eps	src/mp2.py	/^eps = np.asarray(scf_wfn.epsilon_a())$/;"	v
fh	src/mp2.py	/^fh = open(filename, 'r')$/;"	v
fh	src/read_from_argv.py	/^fh = open(filename, 'r')$/;"	v
filename	src/mp2.py	/^filename = sys.argv[1]$/;"	v
filename	src/read_from_argv.py	/^filename = sys.argv[1]$/;"	v
input_file_name	src/mp2.py	/^input_file_name = os.path.basename(sys.argv[1])$/;"	v
input_file_name	src/read_from_argv.py	/^input_file_name = os.path.basename(sys.argv[1])$/;"	v
memory_footprint	src/mp2.py	/^memory_footprint = I_size * 1.5$/;"	v
mints	src/mp2.py	/^mints = psi4.core.MintsHelper(scf_wfn.basisset())$/;"	v
mol	src/mp2.py	/^mol = psi4.geometry($/;"	v
mp2_os_corr	src/mp2.py	/^mp2_os_corr = 0.0$/;"	v
mp2_ss_corr	src/mp2.py	/^mp2_ss_corr = 0.0$/;"	v
name	src/mp2.py	/^name = input_file_name.split(sep=".")$/;"	v
name	src/read_from_argv.py	/^name = input_file_name.split(sep=".")$/;"	v
ndocc	src/mp2.py	/^ndocc = scf_wfn.nalpha()$/;"	v
nmo	src/mp2.py	/^nmo = scf_wfn.nmo()$/;"	v
np	src/mp2.py	/^import numpy as np$/;"	I	nameref:module:numpy
numerator	src/mp2.py	/^                numerator = Imo[i, a, j, b] * (Imo[i, a, j, b] - Imo[i, b, j, a])$/;"	v
numerator	src/mp2.py	/^                numerator = Imo[i, a, j, b] * Imo[i, a, j, b]$/;"	v
numpy_memory	src/mp2.py	/^numpy_memory = 2$/;"	v
outer_dir	src/current_directory.py	/^outer_dir = current_dir.split(sep="MP2")$/;"	v
outer_dir	src/mp2.py	/^outer_dir = current_dir.split(sep="MP2")$/;"	v
scf_e	src/mp2.py	/^scf_e, scf_wfn = psi4.energy('scf', return_wfn=True)$/;"	v
scf_wfn	src/mp2.py	/^scf_e, scf_wfn = psi4.energy('scf', return_wfn=True)$/;"	v
text	src/mp2.py	/^text = fh.read()$/;"	v
text	src/read_from_argv.py	/^text = fh.read()$/;"	v
